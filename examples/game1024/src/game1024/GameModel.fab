package game1024;

import fabric.util.RandomGenerator;
import fabric.util.Int2DArray;

public class GameModel [label L] {

	/** The size of the square of tiles. */
	protected final int{L} size;
	/** The tile values in the game. A blank tile is represented by zero. */
	private Int2DArray[L]{L} tiles;
	/** Used for randomness. */
	private RandomGenerator[L]{L} random;

	public GameModel{L} (int{L} size) throws (NegativeArraySizeException{L}) {
		this.size = size;
		super();
		tiles = new Int2DArray[L](size,size);
		random = new RandomGenerator[L]();
	}

	public boolean{L} addNewTile{L} () {
		int numFree = 0;
		for (int r = 0; r < size; r++) {
			for (int c = 0; c < size; c++) {
				if (tiles.get(r,c) == 0) numFree++;
			}
		}
		if (numFree == 0) 
			return false;
		int i = random.nextInt(numFree);
		for (int r = 0; r < size; r++) {
			for (int c = 0; c < size; c++) {
				if (tiles.get(r, c) == 0 && i-- == 0) {
					tiles.set(r, c, random.nextInt(10) == 0 ?  2 : 1); 
					return true;
				}
			}
		}
		throw new Error("Can't get here");		
	}

	public int{L} size() {
		return this.size;
	}
	/** Get the tile at location loc. */
	public int{L} tile{L}(Location[L]{L} loc) {
		return tiles.get(loc.row, loc.col);
	}	
	/** Get the tile at row r, column c. */
	public int{L;r;c} tile(int r, int c) {
		return tiles.get(r, c);
	}
	/** Get tile (x,y) in the coordinate system with (dx,dy) going to the right. */
	private int{L} rtile{L} (int{L} x, int{L} y, int{L} dx, int{L} dy) {
		return tile(new Location[L](x,y,dx,dy,this));
	}
	/** Set tile (x,y) in the coordinate system with (dx,dy) going to the right. */
	private void setrtile{L} (int{L} x, int{L} y, int{L} dx, int{L} dy, int{L} v) {
		Location[L] loc = new Location[L](x,y,dx,dy,this);
		tiles.set(loc.row, loc.col, v);
	}
}
